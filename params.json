{"body":"Termcolor\r\n=========\r\n\r\n\t  _____                    ____      _                \r\n\t |_   _|__ _ __ _ __ ___  / ___|___ | | ___  _ __  \r\n\t   | |/ _ \\ '__| '_ ` _ \\| |   / _ \\| |/ _ \\| '__|   \r\n\t   | |  __/ |  | | | | | | |__| (_) | | (_) | |      \r\n\t   |_|\\___|_|  |_| |_| |_|\\____\\___/|_|\\___/|_|      \r\n\t  ------------------------------------------------\r\n\t   \t                                                  \r\n\r\n\r\nIs a C library used for ANSII Color formatting for Linux/Mac terminal output.\r\n\r\n\r\n* [Installation](#installation)\r\n* [Termcolor users documentation](#termcolor-users-documentation) &larr; &hearts;\r\n* [Termcolor developers documentation](#termcolor-developers-documentation)\r\n\r\n![Termcolor Library](https://raw.github.com/cyounes/termcolor/master/examples/example_termcolor.png) \r\n\r\n##Installation:\r\nThere are two ways to install `termcolor.h` library:\r\n\r\n### 1. Install into gcc includes folder :\r\n&rarr; ```need root permissions```\r\n```\r\ncurl https://raw.github.com/cyounes/termcolor/master/quickinstall.sh | sh \r\n```\r\ninclude it in your code:\r\n```\r\n#include <termcolor.h>\r\n```\r\n### 2. download termcolor.h in your project folder:  \r\nget `termcolor.h` file:\r\n```\r\ncurl -O https://raw.github.com/cyounes/termcolor/master/termcolor.h \r\n```\r\ninclude it in your code then start use the libray :)\r\n\r\n\t#include \"termcolor.h\"\r\n\t\r\n\r\n## Termcolor users documentation: \r\n`cprint()` function facilitates the use of the **termcolor** library, the programer needs to know just some tags to get a good results. So to get a good results you must be **OK** to use `cprint()` instead of `printf()` :P\r\n\r\n* Example 1: \r\n\r\n\t```\r\n\tcprint(\"${bd}Hello world!${/bd}\\n\");\r\n\t```\r\nIn this example, the `${bd}` tag tells the program to **START** showing text in bold and the `${/bd}` tag tells the program to **STOP** showing text in bold.\r\n\r\n* Example 2:\r\n\r\n\t```\r\n\tcprint(\"${ul}Hello world!${/ul}\\n\");\r\n\t```\r\nIn the second example, the `${ul}` tag tells the program to **START** underlining text and the `${/ul}` tag tells the program to **STOP** underlining the text.\r\n\r\n### Easy to use?\r\nThe principle of using this function is roughly the principle of html tag, every time you open a tag you must close it after inserting a code.\r\nExcept it is not quite the same, as you will see in the following examplesâ€¦\r\n\r\n### Tags:\r\n\r\n#### Text decoration\r\nTag name: \t| \tWhat it does:\r\n----------- | ----------------\r\n${bd}\t\t| Start Bold\r\n${/bd}\t\t| Stop Bold\r\n${ul}\t\t| Start Underline\r\n${/ul}\t\t| Stop underline\r\n${bl}\t\t| Start blink\r\n${/bl}\t\t| Stop blink\r\n------------------------------\r\n#### Colors:\r\n##### Effects: \r\nTag name:\t|\tWhat it does:\r\n----------- | ------------------------------------------------\r\n${rv} \t\t| reverse colors\r\n${/rv}\t\t| stop reversing colors\r\n${bi}\t\t| use high intensity for background color\r\n${/bi}\t\t| stop using high intensity for background color\r\n${fi}\t\t| use high intensity for foreground color\r\n${/fi}\t\t| stop using high intensity for foreground color\r\n---------------------------------------------------------------\r\n\r\n##### Foreground and Background colors:\r\n\r\n###### Background color tags: \r\n\r\nTag name: \t|\tWhat it does:\r\n----------- | -------------------------\t\t\r\n${bb}\t\t| Black background\r\n${rb}\t\t| Red background\r\n${gb}\t\t| Green background\r\n${yb}\t\t| Yellow background\r\n${ub}\t\t| Blue background\r\n${mb}\t\t| Magenta background\r\n${cb}\t\t| Cyan background\r\n${wb}\t\t| White background\r\n${/bg} \t\t| Stop using background\r\n---------------------------------------\r\n\r\n###### Foreground color tags:\r\n\r\nTag name: \t|\tWhat it does:\r\n----------- | -------------------------\t \r\n${bf}\t\t| Black foreground\r\n${rf}\t\t| Red foreground\r\n${gf}\t\t| Green foreground\r\n${yf}\t\t| Yellow foreground\r\n${uf}\t\t| Blue foreground\r\n${mf}\t\t| Magenta foreground\r\n${cf}\t\t| Cyan foreground\r\n${wf}\t\t| White foreground\r\n${/fg}\t\t| Stop using foreground\r\n----------------------------------------\r\n\r\n### autoResetStyle(): \r\nThis function has one `BOOLEAN` argument, when it take the `TRUE` variable, you need to restart all effects and decoration you did in the previous `cprint()`.\r\nOtherwise, if you forget to close the tags in the previous `cprint()` , the next one continue applying all the effects and decorations that you have forgot to close.\r\n\r\n* Example:\r\n\r\n\t* _auto reset_ :\r\n\t\r\n\t```\r\n\tautoResetStyle(TRUE);\r\n\tcprint(\"${bd}Hello \");\r\n\tcprint(\"world\\n\");\r\n\t```\r\n\tthis will display **Hello** in bold and world in normal weight.\r\n\r\n\t* _don't auto reset_ :\r\n\t\r\n\t```\r\n\tautoResetStyle(FALSE);\r\n\tcprint(\"${bd}Hello \");\r\n\tcprint(\"world\\n\");\r\n\t```\r\n\tthis will display both **Hello** and **world** in bold\r\n\t\r\n### cprint() and variables:\r\nCurrently, `cprint()` ~~must exactly take one arguments (char *)~~ takes more than one argument, \r\nhowever it takes only the `int %d` , `char %c` and strings `char * %s` , it may prints anything wrong\r\nif you give a long or float argument.\r\nin the next versions may be developed to take all the data types possible which is the case of `printf()` .\r\n\r\nSo to print a variable of another data type using effects,\r\nyou must disable `auto reset` by doing : `autoResetStyle(FALSE);`\r\nthen put the printf(args) between tow cprint()s.\r\n#### Example: \r\n\r\n```\r\n\tlong a=10, b=10;\r\n\tautoResetStyle(FALSE);\r\n\tcprint(\"a = ${bd} }\r\n\tprintf(\"%ld\",a);\r\n\tcprint(\"${/bd} b= ${bd}\");\r\n\tprintf(\"%ld, b);\r\n\tcprint(\"${/bd}\\n\");\r\n```\r\n\r\n## Termcolor developers documentation:\r\n### Available Colors:\r\n `BLACK` `RED` `GREEN` `YELLOW` `BLUE` `MAGENTA` `CYAN` `WHITE`\r\n\r\n\r\n### BOOLEAN ?\r\nBy including **termcolor** library in your code, you don't need to include the ~~**stdbool**~~ library. However you need to write the boolean keywords in uppercase characters:  ***TRUE***  and ***FALSE*** \r\n\r\n### Functions:\r\n\r\n#### Colors: \r\n\r\n+ `bgColor(COLOR)` : set the background color using the available colors.\r\n\r\n+ `fgColor(COLOR)` : set the foreground color using the available colors.\r\n\r\nfor `bgColor(COLOR)` and `fgColor(COLOR)` functions use the variable `DEFAULT`as parameter to reset the default color:\r\n```\r\n\tbgColor(DEFAULT);\r\n\tfgColor(DEFAULT);\r\n```\r\n#### Text decorations:\r\n\r\n+ `textBold(BOOLEAN)` : enable or disable text bolding for the next output:\r\n``` \r\n\t\ttextBold(TRUE); \r\n\t\ttextBold(FALSE);\r\n```\r\n\r\n+ `textBlink(BOOLEAN)` : enable or disable text blinking for the next output:\r\n``` \r\n\t\ttextBlink(TRUE); \r\n\t\ttextBlink(FALSE);\r\n```\r\n\r\n+ `colorReverse(BOOLEAN)`: enable or disable colors reversing for the next output:\r\n``` \r\n\t\tcolorReverse(TRUE); \r\n\t\tcolorReverse(FALSE);\r\n```\r\n\r\n+ `textUnderline(BOOLEAN)`: underline text\r\n\r\n+ `highFgIntensity(BOOLEAN)` : Use High Intensity for foreground colors.\r\n\r\n+ `highBgIntensity(BOOLEAN)` : Use High Intensity for background colors.\r\n\r\n+ `setStyle()` : Usually the programer don't need to invoke this function, it will be invoked automatically by the other functions each time you change the style.\r\n\r\n+ `resetStyle()` : Reset all colors and decorations by default!, i suggest to invoke this function at the end of your main to restore all as default.\r\n\r\n### Examples:\r\n##### Red Background:\r\n\r\n```\r\n\tbgColor(RED);\r\n\tprintf(\"text with RED Background\");\r\n```\r\n######Result:\r\n![termcolor red background](https://raw.github.com/cyounes/termcolor/master/examples/red_background.png) \r\n-\r\n##### Default background + Red foreground:\r\n\r\n```\r\n\tbgColor(DEFAULT);\r\n\tfgColor(RED);\r\n\tprintf(\"text with RED Foreground\");\r\n```\r\n######Result:\r\n![termcolor red foreground](https://raw.github.com/cyounes/termcolor/master/examples/red_foreground.png)\r\n-\r\n##### Yellow text on red background:\r\n\r\n```\r\n\tbgColor(RED);\r\n\tfgColor(YELLOW);\r\n\tprintf(\"YELLOW text in RED Background\");\r\n```\r\n######Result:\r\n![Yellow text on red background](https://raw.github.com/cyounes/termcolor/master/examples/yellow_in_red.png)\r\n-\r\n##### Yellow Bold text on red background:\r\n\r\n```\r\n\tbgColor(RED);\r\n\tfgColor(YELLOW);\r\n\ttextBold(TRUE);\r\n\tprintf(\"YELLOW and BOLD text in RED Background\");\r\n```\r\n######Result:\r\n![termcolor Yellow Bold text on red background](https://raw.github.com/cyounes/termcolor/master/examples/bold_yellow_in_red.png)\r\n-\r\n##### Yellow, Bold and underlined text on red background:\r\n\r\n```\r\n\tbgColor(RED);\r\n\tfgColor(YELLOW);\r\n\ttextBold(TRUE);\r\n\ttextUnderline(TRUE);\r\n\tprintf(\"YELLOW and BOLD text in RED Background\");\r\n```\r\n######Result:\r\n![termcolor Yellow, Bold and underlined text on red background](https://raw.github.com/cyounes/termcolor/master/examples/bold_yellow_underline.png)\r\n-\r\n\r\n##### High Intensity: Yellow Bold text on red background:\r\n\r\n```\r\n\tbgColor(RED);\r\n\tfgColor(YELLOW);\r\n\ttextBold(TRUE);\r\n\thighFgIntensity(TRUE);\r\n\thighBgIntensity(TRUE);\r\n\tprintf(\"YELLOW and BOLD text in RED Background\");\r\n```\r\n######Result:\r\n![termcolor High Intensity: Yellow Bold text on red background](https://raw.github.com/cyounes/termcolor/master/examples/high_intens.png)\r\n-\r\n\r\n##### Reversed colors:\r\n\r\n```\r\n\tbgColor(DEFAULT);\r\n\tfgColor(DEFAULT);\r\n\ttextBold(TRUE);\r\n\ttextUnderline(TRUE);\r\n\tprintf(\"REVERSED test with default foreground and default background :)\");\r\n```\r\n######Result:\r\n![termcolor Reversed colors](https://raw.github.com/cyounes/termcolor/master/examples/reversed_colors.png)\r\n-\r\n\r\n##### Main Example:\r\n\r\n```\r\n#include <stdio.h>\r\n#include \"termcolor.h\"\r\n\r\nint main() {\r\n\r\n\tprintf(\"Hi, Thanks for trying termcolor library :) \\n\" );\r\n\tprintf(\"Using this library allow the developer to decorate \\\r\nthe output of its console application.\\n\\n\");\r\n\tprintf(\"Some Examples: \\n\\n\");\r\n\t\r\n\tbgColor(RED); // Background RED and not \"RED\" !\r\n\tprintf(\"text with RED Background\\n\\n\");\r\n\tbgColor(DEFAULT); // Default Background Color\r\n\tfgColor(RED); // RED Foreground color \r\n\tprintf(\"text with RED Foreground\\n\\n\");\r\n\tbgColor(RED);\r\n\tfgColor(YELLOW);\r\n\tprintf(\"YELLOW text in RED Background\\n\\n\");\r\n\ttextBold(TRUE); // Bold Text\r\n\tprintf(\"YELLOW and BOLD text in RED Background\\n\\n\");\r\n\ttextUnderline(TRUE); // Underlined text \r\n\tbgColor(DEFAULT);\r\n\tprintf(\"YELLOW and BOLD and Underlined text\\n\\n\");\r\n\tfgColor(DEFAULT);\r\n\tcolorReverse(TRUE);\r\n\tprintf(\"REVERSED test with default foreground and default background :)\\n\\n\");\r\n\tcolorReverse(FALSE);\r\n\ttextBlink(TRUE);\r\n\tprintf(\"BLINKING text with default foreground and default background\\n\\n\");\r\n\t\r\n\tresetStyle(); // Reset all as default \r\n\tprintf(\"Now Examples using High Intensity\\n\\n\");\r\n\thighFgIntensity(TRUE);\r\n\thighBgIntensity(TRUE);\r\n\tbgColor(RED);\r\n\tprintf(\"text with RED Background\\n\\n\");\r\n\tbgColor(DEFAULT);\r\n\tfgColor(RED);\r\n\tprintf(\"text with RED Foreground\\n\\n\");\r\n\tbgColor(RED);\r\n\tfgColor(YELLOW);\r\n\tprintf(\"YELLOW text in RED Background\\n\\n\");\r\n\ttextBold(TRUE);\r\n\tprintf(\"YELLOW and BOLD text in RED Background\\n\\n\");\r\n\t\r\n\tresetStyle();\r\n\tprintf(\"Simple Text :D \\n\\n\");\r\n\t\r\n    return 0;\r\n}\r\n\r\n```\r\n######Result:\r\n![termcolor Reversed colors](https://raw.github.com/cyounes/termcolor/master/examples/example_termcolor.png)\r\n-\r\n\r\n## TODO:\r\n* insert horizontal line with specified color.\r\n* Text align : [Left ; Center ; Right ].\r\n* Text Border.\r\n* add availability to `cprint()` to take more than one argument.\r\n\r\n### Fork me on GitHub:\r\n\r\nI'll be very happy to take pull requests from others, Go ahead and fork me.\r\n\r\n###Who are you?\r\nMy name is [Younes Cheikh][1] C-addicted, student and desktop applications developer, follow me on [twitter][2] or visite my [personal website][3] :)\r\n\r\n\r\n[1]: http://github.com/cyounes/        \"c.Younes on github\"\r\n[2]: http://twitter/cyounes  \"@cyounes\"\r\n[3]: http://cyounes.com/    \"personal website\"\r\n\r\n","name":"Termcolor","tagline":"ANSII Color formatting for terminal output","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}